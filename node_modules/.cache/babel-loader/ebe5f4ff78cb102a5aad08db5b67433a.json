{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\OneDrive\\\\Desktop\\\\Dasima Project\\\\ultimate-dasima\\\\src\\\\components\\\\SearchBar\\\\SearchBar.js\";\nimport React from \"react\";\nimport \"./SearchBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: \"\",\n      fileType: \"gif\",\n      imagesToSearch: 10,\n      start: 1\n    };\n    this.fileTypeOptions = {\n      \"Any Image\": \"any_image\",\n      \".gif\": \"gif\"\n    };\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n  getFileTypeClass(fileTypeOption) {\n    if (this.state.fileType === fileTypeOption) {\n      return \"active\";\n    } else {\n      return \"\";\n    }\n  }\n  handleFileTypeChange(fileTypeOption) {\n    this.setState({\n      fileType: fileTypeOption\n    });\n    this.props.rerender();\n  }\n\n  //Not an event handler so don't need to bind 'this'\n  renderFileTypeOptions() {\n    return Object.keys(this.fileTypeOptions).map(fileTypeOption => {\n      let fileType = this.fileTypeOptions[fileTypeOption];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: this.getFileTypeClass(fileType),\n        onClick: this.handleFileTypeChange.bind(this, fileType),\n        children: fileTypeOption\n      }, fileType, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this);\n    });\n  }\n  handleTermChange(event) {\n    this.setState({\n      term: event.target.value\n    });\n  }\n  handleSearch() {\n    if (this.state.term !== \"\") {\n      this.props.searchImages(this.state.term, this.state.start, this.state.imagesToSearch, this.state.fileType);\n      this.setState({\n        start: this.state.start + 10\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.renderFileTypeOptions()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.handleTermChange,\n        placeholder: \"Try: Winter Aespa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleSearch,\n        children: \"Release Flavor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default SearchBar;","map":{"version":3,"names":["React","SearchBar","Component","constructor","props","state","term","fileType","imagesToSearch","start","fileTypeOptions","handleTermChange","bind","handleSearch","getFileTypeClass","fileTypeOption","handleFileTypeChange","setState","rerender","renderFileTypeOptions","Object","keys","map","event","target","value","searchImages","render"],"sources":["C:/Users/danie/OneDrive/Desktop/Dasima Project/ultimate-dasima/src/components/SearchBar/SearchBar.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: \"\",\r\n            fileType: \"gif\",\r\n            imagesToSearch: 10,\r\n            start: 1\r\n        }\r\n\r\n        this.fileTypeOptions = {\r\n            \"Any Image\": \"any_image\",\r\n            \".gif\": \"gif\"\r\n        }\r\n\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n    }\r\n\r\n    getFileTypeClass(fileTypeOption) {\r\n        if (this.state.fileType === fileTypeOption) {\r\n            return \"active\"\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    handleFileTypeChange(fileTypeOption) {\r\n        this.setState({\r\n            fileType: fileTypeOption\r\n        })\r\n        this.props.rerender();\r\n    }\r\n\r\n    //Not an event handler so don't need to bind 'this'\r\n    renderFileTypeOptions() {\r\n        return Object.keys(this.fileTypeOptions).map((fileTypeOption) => {\r\n            let fileType = this.fileTypeOptions[fileTypeOption];\r\n            return <li className={this.getFileTypeClass(fileType)} \r\n                    key={fileType} \r\n                    onClick={this.handleFileTypeChange.bind(this, fileType)}>\r\n                {fileTypeOption}</li>\r\n        })\r\n    }\r\n\r\n    handleTermChange(event) {\r\n        this.setState({\r\n            term: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSearch() {\r\n        if (this.state.term !== \"\") {\r\n            this.props.searchImages(this.state.term, this.state.start, this.state.imagesToSearch, this.state.fileType)\r\n            this.setState({\r\n                start: this.state.start + 10\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <div className=\"options\">\r\n                    <ul>\r\n                        {this.renderFileTypeOptions()}\r\n                    </ul>\r\n                </div>\r\n                <input type=\"text\" onChange={this.handleTermChange} placeholder=\"Try: Winter Aespa\"/>\r\n                <button onClick={this.handleSearch}>Release Flavor</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAC;AAEzB,MAAMC,SAAS,SAASD,KAAK,CAACE,SAAS,CAAC;EACpCC,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,KAAK;MACfC,cAAc,EAAE,EAAE;MAClBC,KAAK,EAAE;IACX,CAAC;IAED,IAAI,CAACC,eAAe,GAAG;MACnB,WAAW,EAAE,WAAW;MACxB,MAAM,EAAE;IACZ,CAAC;IAED,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAAC;IACxD,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACD,IAAI,CAAC,IAAI,CAAC;EACpD;EAEAE,gBAAgB,CAACC,cAAc,EAAE;IAC7B,IAAI,IAAI,CAACV,KAAK,CAACE,QAAQ,KAAKQ,cAAc,EAAE;MACxC,OAAO,QAAQ;IACnB,CAAC,MAAM;MACH,OAAO,EAAE;IACb;EACJ;EAEAC,oBAAoB,CAACD,cAAc,EAAE;IACjC,IAAI,CAACE,QAAQ,CAAC;MACVV,QAAQ,EAAEQ;IACd,CAAC,CAAC;IACF,IAAI,CAACX,KAAK,CAACc,QAAQ,EAAE;EACzB;;EAEA;EACAC,qBAAqB,GAAG;IACpB,OAAOC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACX,eAAe,CAAC,CAACY,GAAG,CAAEP,cAAc,IAAK;MAC7D,IAAIR,QAAQ,GAAG,IAAI,CAACG,eAAe,CAACK,cAAc,CAAC;MACnD,oBAAO;QAAI,SAAS,EAAE,IAAI,CAACD,gBAAgB,CAACP,QAAQ,CAAE;QAE9C,OAAO,EAAE,IAAI,CAACS,oBAAoB,CAACJ,IAAI,CAAC,IAAI,EAAEL,QAAQ,CAAE;QAAA,UAC3DQ;MAAc,GAFNR,QAAQ;QAAA;QAAA;QAAA;MAAA,QAEI;IAC7B,CAAC,CAAC;EACN;EAEAI,gBAAgB,CAACY,KAAK,EAAE;IACpB,IAAI,CAACN,QAAQ,CAAC;MACVX,IAAI,EAAEiB,KAAK,CAACC,MAAM,CAACC;IACvB,CAAC,CAAC;EACN;EAEAZ,YAAY,GAAG;IACX,IAAI,IAAI,CAACR,KAAK,CAACC,IAAI,KAAK,EAAE,EAAE;MACxB,IAAI,CAACF,KAAK,CAACsB,YAAY,CAAC,IAAI,CAACrB,KAAK,CAACC,IAAI,EAAE,IAAI,CAACD,KAAK,CAACI,KAAK,EAAE,IAAI,CAACJ,KAAK,CAACG,cAAc,EAAE,IAAI,CAACH,KAAK,CAACE,QAAQ,CAAC;MAC1G,IAAI,CAACU,QAAQ,CAAC;QACVR,KAAK,EAAE,IAAI,CAACJ,KAAK,CAACI,KAAK,GAAG;MAC9B,CAAC,CAAC;IACN;EACJ;EAGAkB,MAAM,GAAG;IACL,oBACI;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB;QAAK,SAAS,EAAC,SAAS;QAAA,uBACpB;UAAA,UACK,IAAI,CAACR,qBAAqB;QAAE;UAAA;UAAA;UAAA;QAAA;MAC5B;QAAA;QAAA;QAAA;MAAA,QACH,eACN;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAE,IAAI,CAACR,gBAAiB;QAAC,WAAW,EAAC;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAE,eACrF;QAAQ,OAAO,EAAE,IAAI,CAACE,YAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAwB;IAAA;MAAA;MAAA;MAAA;IAAA,QACzD;EAEd;AACJ;AAEA,eAAeZ,SAAS"},"metadata":{},"sourceType":"module"}